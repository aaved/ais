#!/usr/bin/env bash
#
# ais - An arch install script based on installation guide.
# https://github.com/flame-0/ais

read -r -p 'Disk (example: /dev/sda): ' disk
read -r -p "Swap size for $disk (examples: +512M, +1G): " swap_size
read -r -p 'Time zone (examples: Europe/London, Asia/Tokyo): ' timezone
read -r -p 'Hostname (example: arch): ' hostname

# Set the root password
while true; do
    read -s -r -p 'Root password: ' root_password
    echo
    read -s -r -p 'Retype password: ' root_password_confirm
    echo
    [[ "$root_password" = "$root_password_confirm" ]] && break
    echo 'Passwords do not match.'
done

# Username and password for user
read -r -p 'Username: ' username
while true; do
    read -s -r -p "Password for $username: " user_password
    echo
    read -s -r -p 'Retype password: ' user_password_confirm
    echo
    [[ "$user_password" = "$user_password_confirm" ]] && break
    echo 'Passwords do not match.'
done
echo

base_packages=(
    base
    linux
    linux-firmware
)

other_packages=(
    alacritty
    base-devel
    discord
    feh
    firefox
    git
    grub
    htop
    lxappearance
    nano
    networkmanager
    nitrogen
    ntfs-3g
    numlockx
    obconf
    openssh
    os-prober
    qbittorrent
    telegram-desktop
    thunar
    ttf-cascadia-code
    ttf-jetbrains-mono
    vim
    xclip
    xdg-user-dirs
    xf86-video-amdgpu
    xorg-server
)

# Update the system clock
system_clock() {
    timedatectl set-ntp true
}

# Partition the disks
partition_disk() {
    # Standard input (stdin) for fdisk command:
    # o          Create an empty DOS partition table
    # n          Add a new partition for swap
    # p          Partition type: Primary
    # 1          Partition number: 1
    #            First sector: default
    # $swap_size Last sector (Suggested size: More than 512 MiB): +512M/+1G/+2G
    # t          Change the partition type
    # 82         Hex code or alias: 82 (Linux swap / Solaris) or swap
    # n          Add a new partition for root
    # p          Partition type: Primary
    # 2          Partition number: 2
    #            First sector: default
    #            Last sector (Suggested size: Remainder of the device): default
    # a          Toggle a bootable flag
    # 2          Partition number: 2
    # w          Write the table to disk
    echo -e "o\nn\np\n1\n\n$swap_size\nt\n82\nn\np\n2\n\n\na\n2\nw\n" | fdisk "$disk"
}

# Format the partitions
format_partition() {
    mkfs.ext4 "${disk}2"
    mkswap "${disk}1"
}

# Mount the file systems
file_system() {
    mount "${disk}2" /mnt
    swapon "${disk}1"
}

# Install essential packages
install_package() {
    pacstrap /mnt "${base_packages[@]}" "${other_packages[@]}"
}

# Fstab
generate_fstab() {
    genfstab -U /mnt >> /mnt/etc/fstab
}

# Chroot phase
# Time zone
time_zone() {
    ln -sf /usr/share/zoneinfo/"$timezone" /mnt/etc/localtime
    arch-chroot /mnt hwclock --systohc
}

# Localization
generate_locale() {
    sed -i '/#en_US.UTF-8/s/^#//g' /mnt/etc/locale.gen
    arch-chroot /mnt locale-gen
    echo 'LANG=en_US.UTF-8' > /mnt/etc/locale.conf
}

# Network configuration
network_configuration() {
    echo "$hostname" > /mnt/etc/hostname
    {
        echo '127.0.0.1 localhost'
        echo '::1       localhost'
        echo "127.0.1.1 $hostname.localdomain $hostname"
    } >> /mnt/etc/hosts
    arch-chroot /mnt systemctl enable NetworkManager.service
}

# Initramfs
create_initramfs() {
    sed -i '/MODULES=()/s/)$/amdgpu)/g' /mnt/etc/mkinitcpio.conf
    arch-chroot /mnt mkinitcpio -p linux
}

# Root password
root_password() {
    echo root:"$root_password" | chpasswd --root /mnt
}

# Boot loader
boot_loader() {
    arch-chroot /mnt grub-install --target=i386-pc "$disk"
    {
        sed -i \
            -e 's/\(GRUB_DEFAULT=\)0/\12/g' \
            -e 's/\(GRUB_TIMEOUT=\)5/\120/g' \
            -e 's/\(GRUB_CMDLINE_LINUX="\)"/\1"\nGRUB_DISABLE_OS_PROBER=false/g' \
            /mnt/etc/default/grub
    }
    arch-chroot /mnt grub-mkconfig -o /boot/grub/grub.cfg
}

# Create user
user_add() {
    arch-chroot /mnt useradd -m -G wheel "$username"
    echo "$username":"$user_password" | chpasswd --root /mnt
}

# User permissions
user_permission() {
    echo "$username ALL=(ALL) ALL" >> /mnt/etc/sudoers.d/"$username"
}

# Reboot
reboot_machine() {
    umount -R /mnt
    echo 'Installation complete. You may now reboot the machine.'
}

main() {
    set -euo pipefail
    system_clock
    partition_disk
    format_partition
    file_system
    install_package
    generate_fstab
    time_zone
    generate_locale
    network_configuration
    create_initramfs
    root_password
    boot_loader
    user_add
    user_permission
    reboot_machine
}

main
